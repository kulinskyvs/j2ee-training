apply plugin: 'eclipse'


ext {
    glassfish_home = "$System.env.GLASSFISH_HOME${File.separator}glassfish"
    glassfish_bin  = "$System.env.GLASSFISH_HOME${File.separator}glassfish${File.separator}bin"
    glassfish_lib  = "$System.env.GLASSFISH_HOME${File.separator}glassfish${File.separator}lib"
}


subprojects {
  apply plugin: 'java'
  version 1.0

  repositories {
//    mavenCentral()
     flatDir {
        dirs glassfish_lib
     }
  }

  dependencies {
//    compile 'javax:javaee-api:6.0'
    compile 'org.glassfish.main.extras:javaee:3.1.2.2'
    compile 'org.glassfish.main.extras:appserv-rt:3.1.2.2'            

    runtime 'org.glassfish.main.extras:javaee:3.1.2.2'
    runtime 'org.glassfish.main.extras:appserv-rt:3.1.2.2'            
  }

  task asadmin(type:Exec) {
    workingDir glassfish_bin

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
      commandLine 'cmd', '/c', 'asadmin.bat'
    } else {
      commandLine "./asadmin"
    }
  }

}

task deploy << {
  project(':server').deploy
}

task undeploy << {
  project(':server').undeploy
}

task run_client << {
  project(':client').run_client
}

//////////////////////////////////////////////////////////////////////
project(':client') {
  archivesBaseName = "timeservice-ejb-client"

  dependencies {
    compile project(':server')
  }

  task run_client(dependsOn: 'build', type:JavaExec) {
    main = 'org.training.ejb30.client.Client'
    classpath = sourceSets.main.runtimeClasspath
  }
}

//////////////////////////////////////////////////////////////////////
project(':server') {
  archivesBaseName = "timeservice-ejb-server"

  task deploy(dependsOn: 'build') << {
    asadmin.args "deploy", "--force=true", "--name=${jar.baseName}", "${jar.archivePath}"
    asadmin.execute()
 }

  task undeploy << {
    asadmin.args "undeploy", "${jar.baseName}"
    asadmin.execute()
  }

}


